name:
  Django Testing and Deploy

on:
  push:
    branches: [main]

jobs:
  tests:
    runs-on: ubuntu-latest
    env:
      POSTGRES_DB: "electrochemistry_lab"
      POSTGRES_HOST: localhost
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "vrag"
      POSTGRES_PORT: 5432
      SECRET_KEY: "e-jxsxv)1dww_fj72#t@7cuilv7up1&3d_$ylq7i=djbp@lfg6"
      ALLOWED_HOSTS: "localhost"
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          POSTGRES_PORT: ${{ env.POSTGRES_PORT }}

    steps:

      - name: Check updates
        uses: actions/checkout@v2

      - name: Python setup
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: setup libs
        run: |
          pip install --upgrade pip |
          pip install -r requirements.txt

#      - name: Linting of stocks_products
#        run: flake8 electrochemistry_lab

      - name: Linting of code
        run: flake8

#      - name: 'Create env file'
#        run: |
#          touch .env
#          SECRET_KEY=${{ env.SECRET_KEY }}  >> .env
#          DEBUG=${{ env.DEBUG }}  >> .env
#          ALLOWED_HOSTS=${{ env.ALLOWED_HOSTS }}  >> .env
#          DB_ENGINE=${{ env.DB_ENGINE }}  >> .env
#          DB_NAME=${{ env.DB_NAME }}  >> .env
#          DB_HOST=${{ env.DB_HOST }}  >> .env
#          DB_PORT=${{ env.DB_PORT }}  >> .env
#          DB_USER=${{ env.DB_USER }}  >> .env
#          DB_PASSWORD=${{ env.DB_PASSWORD }}  >> .env
#          cat .env
#
#      - name: Testing
#        run: pytest
#        env:
#          SECRET_KEY: ${{ env.SECRET_KEY }}
#          DEBUG: 0
#          ALLOWED_HOSTS: ${{ env.ALLOWED_HOSTS }}
#          DB_ENGINE: django.db.backends.postgresql
#          DB_NAME: ${{ env.POSTGRES_DB }}
#          DB_HOST: ${{ env.POSTGRES_HOST }}
#          DB_PORT: ${{ env.POSTGRES_PORT }}
#          DB_USER: ${{ env.POSTGRES_USER }}
#          DB_PASSWORD: ${{ env.POSTGRES_PASSWORD }}


